// ignore

import axios from "axios";
import { useEffect, useState } from "react";
import { TGiglist } from "../types/types";

type FeedData = {
    origins: any[];
    destinations: any[];
    travelMode: string;
    routingPreference: string;
};

export const Travelling = ({ giglist }: { giglist: TGiglist }) => {
    const [distanceDataState, setdistanceDataState] = useState<any>();
    const [hasLoaded, setHasLoaded] = useState<boolean>(false);

    useEffect(() => {
        const arisGigs = giglist.map((date) =>
            date.listings.filter((listing) => listing.artist === "Ari Davis")
        );

        const feedData: FeedData = {
            origins: [],
            destinations: [],
            travelMode: "DRIVE",
            routingPreference: "TRAFFIC_AWARE",
        };

        const flattedGigs = arisGigs.flat();

        flattedGigs &&
            flattedGigs.length &&
            feedData.origins.push(
                flattedGigs.map((gig) => {
                    return {
                        waypoint: {
                            location: {
                                latLng: {
                                    latitude: gig.lat,
                                    longitude: gig.lng,
                                },
                            },
                        },
                    };
                })
            );

        flattedGigs &&
            flattedGigs.length &&
            feedData.destinations.push({
                waypoint: {
                    location: {
                        latLng: {
                            latitude: flattedGigs[0].lat,
                            longitude: flattedGigs[0].lng,
                        },
                    },
                },
            });

        let config = {
            method: "post",
            url: "https://routes.googleapis.com/distanceMatrix/v2:computeRouteMatrix",
            headers: {
                "Content-Type": "application/json",
                "X-Goog-Api-Key": "AIzaSyDTkZauLKxFmJ3qW2jKsgjLvgt30kqJ3AM",
                "X-Goog-FieldMask":
                    "originIndex,destinationIndex,duration,distanceMeters,status,condition",
            },
            data: feedData,
        };

        console.log(config);

        axios(config)
            .then(function (response) {
                setdistanceDataState(response.data);
                console.log(JSON.stringify(response.data));
                setHasLoaded(true);
            })
            .catch(function (error) {
                console.log(error);
            });
    }, []);

    const distanceMeters: [] =
        hasLoaded &&
        distanceDataState &&
        distanceDataState.length &&
        distanceDataState.map((el: any) => {
            return el.distanceMeters;
        });

    return (
        <div>
            {distanceMeters.forEach((item) => {
                item && console.log(item as number);
            })}
        </div>
    );
};

const test = `curl -X POST -d '{
    "origins": [
      {
        "waypoint": {
          "location": {
            "latLng": {
              "latitude": 37.420761,
              "longitude": -122.081356
            }
          }
        },
        "routeModifiers": { "avoid_ferries": true}
      },
      {
        "waypoint": {
          "location": {
            "latLng": {
              "latitude": 37.403184,
              "longitude": -122.097371
            }
          }
        },
        "routeModifiers": { "avoid_ferries": true}
      }
    ],
    "destinations": [
      {
        "waypoint": {
          "location": {
            "latLng": {
              "latitude": 37.420999,
              "longitude": -122.086894
            }
          }
        }
      },
      {
        "waypoint": {
          "location": {
            "latLng": {
              "latitude": 37.383047,
              "longitude": -122.044651
            }
          }
        }
      }
    ],
    "travelMode": "DRIVE",
    "routingPreference": "TRAFFIC_AWARE"
  }' \
  -H 'Content-Type: application/json' -H 'X-Goog-Api-Key: YOUR_API_KEY' \
  -H 'X-Goog-FieldMask: originIndex,destinationIndex,duration,distanceMeters,status,condition' \
  'https://routes.googleapis.com/distanceMatrix/v2:computeRouteMatrix'`;
